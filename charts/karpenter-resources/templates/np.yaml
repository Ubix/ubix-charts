
{{- range $nodePoolName, $nodePoolSpecs := .Values.nodePools }}
---
apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: {{ $nodePoolName }}
spec:
  template:
    metadata:
      labels:
{{ $nodePoolSpecs.labels | toYaml | indent 8 }}
      annotations:
{{ $nodePoolSpecs.annotations | toYaml | indent 8 }}
    spec:
      nodeClassRef:
        group: karpenter.k8s.aws
        kind: EC2NodeClass
        name: {{ $nodePoolSpecs.nodeClass }}
      expireAfter: {{ $nodePoolSpecs.expireAfter }} # 720h
      {{- if $nodePoolSpecs.taints }}
      taints:
      {{- range $taintKey, $taintSpec := $nodePoolSpecs.taints }}
      - key: {{ $taintKey }}
        effect: {{ $taintSpec.effect }}
        value: {{ $taintSpec.value }}
      {{- end }}
      {{- end }}
      {{- if $nodePoolSpecs.startupTaints }}
      startupTaints:
      {{ range $startupTaintKey, $startupTaintEffect := $nodePoolSpecs.startupTaints -}}
      - key: {{ $startupTaintKey }}
        effect: {{ $startupTaintEffect }}
      {{- end }}
      {{- end }}
      requirements:
      {{- range $requirementsKey, $requirementsSpec := $nodePoolSpecs.requirements }}
      - key: {{ $requirementsKey }}
        operator: {{ $requirementsSpec.operator }}
        values:
        {{- range $requirementKey, $requirementValue := $requirementsSpec.values }}
        - "{{ $requirementKey }}"
        {{- end }}
      {{- end }}
  {{- if $nodePoolSpecs.disruption }}
  disruption:
    consolidationPolicy: {{ $nodePoolSpecs.disruption.consolidationPolicy }} # WhenUnderutilized | WhenEmpty
    {{- if $nodePoolSpecs.disruption.consolidateAfter }}
    consolidateAfter: {{ $nodePoolSpecs.disruption.consolidateAfter }} # 30s
    {{- end }}
    {{- if $nodePoolSpecs.disruption.budgets }}
    budgets:
{{ $nodePoolSpecs.disruption.budgets | toYaml | indent 4 }}
  {{- end }}
  limits:
{{ $nodePoolSpecs.limits | toYaml | indent 4 }}
  weight: {{ default 1 $nodePoolSpecs.weight }}
{{- end }}
