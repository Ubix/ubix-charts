# Default values for cloudspace.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

#Can be located executing
#kubectl get account.organizations.aws.jet.crossplane.io/awsaccount-crossplane
#in the field EXTERNAL-NAME
#Like the following example
#NAME                    READY   SYNCED   EXTERNAL-NAME   AGE
#awsaccount-crossplane   True    True     801337478761    31d

customerName: crossplanecreated
AWSAccountID: "801337478761"
region: "us-east-1"

eks:
  resourcesVpcConfig:
    endpointPrivateAccess: true
    endpointPublicAccess: true
  eksVersion: "1.22"
  eksDiskSize: 8
  addOns: 
    coreDNSAddonVersion: "v1.8.7-eksbuild.1"
    awsEBSCSIDriverAddonVersion: "v1.10.0-eksbuild.1"
    kubeProxyAddonVersion: "v1.22.6-eksbuild.1"
  nodeGroup:
    instanceTypes: t3.medium
    scalingConfig:
      desiredSize: 1
      minSize: 1
      maxSize: 2

iam:
  eksRolePolicy: |-
    {
        "Version": "2012-10-17",
        "Statement": [
            {
                "Effect": "Allow",
                "Principal": {
                    "Service": [
                        "ec2.amazonaws.com",
                        "eks.amazonaws.com",
                        "eks-fargate-pods.amazonaws.com",
                        "lambda.amazonaws.com",
                        "s3.amazonaws.com",
                        "rds.amazonaws.com",
                        "dax.amazonaws.com"
                    ]
                },
                "Action": [
                    "sts:AssumeRole"
                ]
            }
        ]
      }
      
  eksNodeRolePolicy: |-
    {
        "Version": "2012-10-17",
        "Statement": [
            {
                "Effect": "Allow",
                "Principal": {
                    "Service": [
                        "ec2.amazonaws.com"
                    ]
                },
                "Action": [
                    "sts:AssumeRole"
                ]
            }
        ]
      }


providerConfig:
  secretRef:
    namespace: crossplane-system
    name: aws-creds
    key: creds

#Networking

vpc:
  cidrBlock: 10.0.0.0/16
  enableDnsSupport: true
  enableDnsHostNames: true
  instanceTenancy: default

subnets:
  subnet1:
    mapPublicIPOnLaunch: true
    cidrBlock: 10.0.1.0/24
  subnet2:
    mapPublicIPOnLaunch: true
    cidrBlock: 10.0.1.0/24

securityGroup:
  ingress:
      fromPort: 0
      toPort: 0
      ipProtocol: "-1"
      ipRanges:
        cidrIp: 0.0.0.0/0
  egress:
      fromPort: 0
      toPort: 0
      ipProtocol: "-1"
      ipRanges:
        cidrIp: 0.0.0.0/0

natGateway:
  connectivityType: public
