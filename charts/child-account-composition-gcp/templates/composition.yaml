apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: childaccount-gcp
  labels:
      provider: upbound-provider-family-gcp
      name: childaccount-gcp
spec:
  compositeTypeRef:
    apiVersion: gcp.ubix.io/v1alpha1
    kind: ChildAccount
  writeConnectionSecretsToNamespace: crossplane-system
  patchSets:
  - name: metadata
    patches:
    - fromFieldPath: metadata.labels
      type: FromCompositeFieldPath
  - name: providerconfigref-patch
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.providerconfig
      toFieldPath: spec.providerConfigRef.name
  resources:
# ########
# # GCP Project
# ########
  - name: child-project
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: Project
      spec:
        forProvider:
          name: #patchme
          projectId: #patchme
          billingAccount: "{{ .Values.billingAccount }}"
          folderId: "{{ .Values.parentId }}"
          autoCreateNetwork: false
        deletionPolicy: Delete
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.projectId
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.name
      toFieldPath: spec.forProvider.name
    - type: PatchSet
      patchSetName: providerconfigref-patch
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.number
      toFieldPath: status.id
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.projectId
      toFieldPath: status.projectName
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.number
      toFieldPath: status.projectNumber
    - type: ToCompositeFieldPath
      fromFieldPath: status.conditions[0].status
      toFieldPath: status.projectStatus
    readinessChecks:
    - type: MatchString
      fieldPath: status.conditions[0].status
      matchString: "True"
    connectionDetails:
      - fromConnectionSecretKey: kubeconfig

# ########
# # Enable Required APIs
# ########
  - name: Enable Compute API
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ProjectService
      spec:
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          disableDependentServices: false
          service: compute.googleapis.com # patchme
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-project-compute-service-api'
        type: string
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: Enable GKE API
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ProjectService
      spec:
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          disableDependentServices: false
          service: container.googleapis.com
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-project-gke-service-api'
        type: string
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: Enable KMS API
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ProjectService
      spec:
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          disableDependentServices: false
          service: cloudkms.googleapis.com
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-project-kms-service-api'
        type: string
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: Enable Certificate Manager API
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ProjectService
      spec:
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          disableDependentServices: false
          service: certificatemanager.googleapis.com # patchme
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-project-certificate-manager-service-api'
        type: string
    - type: PatchSet
      patchSetName: providerconfigref-patch

# ########
# # VPC
# ########
  - name: vpc
    base:
      apiVersion: compute.gcp.upbound.io/v1beta1
      kind: Network
      spec:
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          autoCreateSubnetworks: false
          routingMode: GLOBAL
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: PatchSet
      patchSetName: providerconfigref-patch
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.id
      toFieldPath: status.vpcID

# ########
# # Subnets
# ########
  - name: private-subnet-1
    base:
      apiVersion: compute.gcp.upbound.io/v1beta1
      kind: Subnetwork
      metadata:
        labels:
          karpenter.sh/discovery: #patchme
          #kubernetes.io/role/internal-lb: "1"
      spec:
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          ipCidrRange: 10.0.64.0/20
          networkRef:
            name: # patched
          region: # patched
          privateIpGoogleAccess: true
          secondaryIpRange:
            - ipCidrRange: 10.8.0.0/14
              rangeName: #patchme
            - ipCidrRange: 10.12.0.0/20
              rangeName: #patchme
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-private-subnet-1'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.region
      toFieldPath: spec.forProvider.region
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.networkRef.name
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.labels[karpenter.sh/discovery]
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.secondaryIpRange[0].rangeName
      transforms:
      - type: string
        string:
          fmt: '%s-gke-pods-range'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.secondaryIpRange[1].rangeName
      transforms:
      - type: string
        string:
          fmt: '%s-gke-svc-range'
    - type: PatchSet
      patchSetName: providerconfigref-patch
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.id
      toFieldPath: status.privateSubnet1ID

# ########
# # Nat Gateway and related resources
# ########
  - name: nat-gateway-static-ip-1
    base:
      apiVersion: compute.gcp.upbound.io/v1beta1
      kind: Address
      spec:
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          #address: 10.0.42.42
          addressType: EXTERNAL
          region: #patched
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-nat-gateway-static-ip-1'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.region
      toFieldPath: spec.forProvider.region
    - type: PatchSet
      patchSetName: providerconfigref-patch
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.selfLink
      toFieldPath: status.natGatewayStaticIP

  - name: nat-gateway-router-1
    base:
      apiVersion: compute.gcp.upbound.io/v1beta1
      kind: Router
      spec:
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          region: #patched
          networkRef:
            name: #patched
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-nat-gateway-router-1'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.region
      toFieldPath: spec.forProvider.region
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.networkRef.name
    - type: PatchSet
      patchSetName: providerconfigref-patch
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.id
      toFieldPath: status.natGatewayRouterID

  - name: nat-gateway-1
    base:
      apiVersion: compute.gcp.upbound.io/v1beta1
      kind: RouterNAT
      spec:
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          logConfig:
            - enable: true
              filter: ERRORS_ONLY
          routerRef:
            name: #patchme
          natIpAllocateOption: MANUAL_ONLY
          natIps: [] #patchme
          region: #patchme
          sourceSubnetworkIpRangesToNat: ALL_SUBNETWORKS_ALL_IP_RANGES
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-nat-gateway-1'
    - type: FromCompositeFieldPath
      fromFieldPath: status.natGatewayStaticIP
      toFieldPath: spec.forProvider.natIps[0]
      policy:
        fromFieldPath: Required
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.region
      toFieldPath: spec.forProvider.region
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.routerRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-nat-gateway-router-1'
    - type: PatchSet
      patchSetName: providerconfigref-patch
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.id
      toFieldPath: status.natGatewayID
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.natIps[0]
      toFieldPath: status.natGatewayIP

# ########
# # GKE Cluster and related resources
# ########

  - name: kms-keyring
    base:
      apiVersion: kms.gcp.upbound.io/v1beta1
      kind: KeyRing
      spec:
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          location: #patchme
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-kms-keyring'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.region
      toFieldPath: spec.forProvider.location
    - type: PatchSet
      patchSetName: providerconfigref-patch
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.id
      toFieldPath: status.kmsKeyringID

  - name: gke-kms-key
    base:
      apiVersion: kms.gcp.upbound.io/v1beta1
      kind: CryptoKey
      spec:
        deletionPolicy: Orphan
        forProvider:
          keyRingRef:
            name: #patchme
          rotationPeriod: 100000s
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-gke-kms-key'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.keyRingRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-kms-keyring'
    - type: PatchSet
      patchSetName: providerconfigref-patch
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.id
      toFieldPath: status.gkeKmsKeyID

  - name: persistent-disk-kms-key
    base:
      apiVersion: kms.gcp.upbound.io/v1beta1
      kind: CryptoKey
      spec:
        deletionPolicy: Orphan
        forProvider:
          keyRingRef:
            name: #patchme
          rotationPeriod: 100000s
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-persistent-disk-kms-key'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.keyRingRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-kms-keyring'
    - type: PatchSet
      patchSetName: providerconfigref-patch
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.id
      toFieldPath: status.persistentDiskKmsKeyID

  - name: gke-disk-encryption-kms-rolebinding
    base:
      apiVersion: kms.gcp.upbound.io/v1beta1
      kind: CryptoKeyIAMMember
      spec:
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        deletionPolicy: Orphan
        forProvider:
          cryptoKeyIdRef:
            name: #patchme
          member: #patchme
          role: roles/cloudkms.cryptoKeyEncrypterDecrypter
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-gke-disk-encryption-kms-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.cryptoKeyIdRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-gke-kms-key'
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectNumber
      toFieldPath: spec.forProvider.member
      policy:
        fromFieldPath: Required
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:service-%s@compute-system.iam.gserviceaccount.com'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: gke-etcd-application-layer-encryption-kms-rolebinding
    base:
      apiVersion: kms.gcp.upbound.io/v1beta1
      kind: CryptoKeyIAMMember
      spec:
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        deletionPolicy: Orphan
        forProvider:
          cryptoKeyIdRef:
            name: #patchme
          member: #patchme
          role: roles/cloudkms.cryptoKeyEncrypterDecrypter
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-gke-etcd-encryption-kms-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.cryptoKeyIdRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-gke-kms-key'
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectNumber
      toFieldPath: spec.forProvider.member
      policy:
        fromFieldPath: Required
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:service-%s@container-engine-robot.iam.gserviceaccount.com'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: GKE Cluster
    base:
      apiVersion: container.gcp.upbound.io/v1beta2
      kind: Cluster
      spec:
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        deletionPolicy: Orphan
        forProvider:
          addonsConfig:
            dnsCacheConfig:
              enabled: true
            gcePersistentDiskCsiDriverConfig:
              enabled: true
          project: #patchme
          #enableAutopilot: true
          location: #patchme
          # nodeLocations:
          # - us-east4-a
          #   us-east4-b
          #   us-central1-c
          minMasterVersion: #patchme
          # monitoringConfig:
          # - enableComponents:
          #   - SYSTEM_COMPONENTS
          #   - APISERVER
          #   - SCHEDULER
          #   - CONTROLLER_MANAGER
          #   - STORAGE
          #   - HPA
          #   - POD
          #   - DAEMONSET
          #   - DEPLOYMENT
          #   - STATEFULSET
          # - managedPrometheus:
          #   - enabled: false
          monitoringService: monitoring.googleapis.com/kubernetes
          loggingService: logging.googleapis.com/kubernetes
          releaseChannel:
            channel: STABLE
          verticalPodAutoscaling:
            enabled: true
          privateClusterConfig:
            enablePrivateNodes: true
            enablePrivateEndpoint: false
            masterIpv4CidrBlock: 192.168.0.0/28
          removeDefaultNodePool: true
          initialNodeCount: 1
          networkRef:
            name: #patchme
          subnetworkRef:
            name: #patchme
          masterAuthorizedNetworksConfig:
            cidrBlocks:
            - displayName: "ArgoCD AWS NAT IP address"
              cidrBlock: "{{ .Values.AWSNATIP }}/32"
            - displayName: "Ubix team access"
              cidrBlock: "0.0.0.0/0"
          clusterAutoscaling:
              enabled: true
              autoProvisioningDefaults:
                  bootDiskKmsKey: #patchme
                  diskSize: 200
                  diskType: pd-standard
                  serviceAccount: #patchme
                  management:
                    autoRepair: true
                    autoUpgrade: true
                  shieldedInstanceConfig:
                    enableIntegrityMonitoring: true
                    enableSecureBoot: true
                  upgradeSettings:
                    strategy: SURGE
                    maxSurge: 1
                    maxUnavailable: 0
                  oauthScopes:
                  - "https://www.googleapis.com/auth/cloud-platform"
                  - "https://www.googleapis.com/auth/logging.write"
                  - "https://www.googleapis.com/auth/monitoring"
                  - "https://www.googleapis.com/auth/devstorage.read_only"
                  - "https://www.googleapis.com/auth/compute"
              resourceLimits: # patchme
              # - resourceType: 'cpu'
              #   maximum: # patchme (1024)
              # - resourceType: 'memory'
              #   maximum: # patchme (2048)
              # - resourceType: 'nvidia-tesla-t4'
              #   maximum: # patchme (16)
          databaseEncryption:
            keyName: #patchme
            state: "ENCRYPTED"
          ipAllocationPolicy:
            clusterSecondaryRangeName: #patchme
            servicesSecondaryRangeName: #patchme
          workloadIdentityConfig:
            workloadPool: #patchme
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.region
      toFieldPath: spec.forProvider.location
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: FromCompositeFieldPath
      fromFieldPath: spec.gke.enableNAP
      toFieldPath: spec.forProvider.clusterAutoscaling.enabled
    - type: FromCompositeFieldPath
      fromFieldPath: spec.gke.resourceLimits
      toFieldPath: spec.forProvider.clusterAutoscaling.resourceLimits
    # - type: FromCompositeFieldPath
    #   fromFieldPath: spec.gke.maxClusterMemory
    #   toFieldPath: spec.forProvider.clusterAutoscaling[0].resourceLimits[0].maximum
    # - type: FromCompositeFieldPath
    #   fromFieldPath: spec.gke.maxClusterCpu
    #   toFieldPath: spec.forProvider.clusterAutoscaling[0].resourceLimits[1].maximum
    # - type: FromCompositeFieldPath
    #   fromFieldPath: spec.gke.maxClusterGpu
    #   toFieldPath: spec.forProvider.clusterAutoscaling[0].resourceLimits[2].maximum
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.networkRef.name
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.subnetworkRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-private-subnet-1'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.ipAllocationPolicy.clusterSecondaryRangeName
      transforms:
      - type: string
        string:
          fmt: '%s-gke-pods-range'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.ipAllocationPolicy.servicesSecondaryRangeName
      transforms:
      - type: string
        string:
          fmt: '%s-gke-svc-range'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.workloadIdentityConfig.workloadPool
      transforms:
      - type: string
        string:
          fmt: '%s.svc.id.goog'
    - type: FromCompositeFieldPath
      fromFieldPath: status.gkeKmsKeyID
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.clusterAutoscaling.autoProvisioningDefaults.bootDiskKmsKey
    - type: FromCompositeFieldPath
      fromFieldPath: status.gkeKmsKeyID
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.databaseEncryption.keyName
    - type: FromCompositeFieldPath
      fromFieldPath: status.gkeNodePoolSAEmail
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.clusterAutoscaling.autoProvisioningDefaults.serviceAccount
    - type: PatchSet
      patchSetName: providerconfigref-patch
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.id
      toFieldPath: status.clusterName
    - type: ToCompositeFieldPath
      fromFieldPath: status.conditions[0].status
      toFieldPath: status.controlPlaneStatus
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.masterAuth.clusterCaCertificate
      toFieldPath: status.clusterCertificateAuthorityData
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.endpoint
      toFieldPath: status.clusterEndpoint
    readinessChecks:
    - type: MatchString
      fieldPath: status.conditions[0].status
      matchString: "True"

  - name: iam-sa-nodepool
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccount
      metadata:
        annotations:
          crossplane.io/external-name: gke-nodepool-sa
        labels:
          service-account: gke-nodepool-sa
      spec:
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          displayName: GKE NodePool Service Account
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-gke-nodepool-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: PatchSet
      patchSetName: providerconfigref-patch
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.email
      toFieldPath: status.gkeNodePoolSAEmail

  - name: workload-identity-iambinding-nodepool
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccountIAMMember
      spec:
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        deletionPolicy: Orphan
        forProvider:
          member: #patchme
          role: roles/iam.workloadIdentityUser
          serviceAccountIdRef:
            name: #patchme
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-gke-nodepool-workload-identity-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.serviceAccountIdRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-gke-nodepool-sa'
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.id #project-id
        - fromFieldPath: spec.id #k8s-namespace
        - fromFieldPath: spec.id #k8s-sa
        strategy: string
        string:
          fmt: "serviceAccount:%s.svc.id.goog[%s/%s]"
      toFieldPath: spec.forProvider.member
    - type: PatchSet
      patchSetName: providerconfigref-patch

# ########
# # IAM Custom Roles
# ########

  - name: load-balancer-controller-role
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ProjectIAMCustomRole
      metadata:
        annotations:
          crossplane.io/external-name: GKE_GCP_Load_Balancer_Controller_Role
      spec:
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          permissions:
            #Compute Load Balancer Admin
            - compute.networks.listPeeringRoutes
            - certificatemanager.certs.list
            - certificatemanager.certs.get
            - compute.firewalls.create
            - compute.instances.setTags
    patches:
      - fromFieldPath: spec.id
        toFieldPath: metadata.name
        transforms:
          - type: string
            string:
              fmt: "%s-load-balancer-controller-role"
      - type: FromCompositeFieldPath
        fromFieldPath: spec.id
        toFieldPath: spec.forProvider.project
      - fromFieldPath: spec.id
        toFieldPath: spec.forProvider.title
        transforms:
          - type: string
            string:
              fmt: "%s-load-balancer-controller-role"
      - type: PatchSet
        patchSetName: providerconfigref-patch
      - type: ToCompositeFieldPath
        fromFieldPath: status.atProvider.id
        toFieldPath: status.GCPLBGKERoleID

  - name: external-dns-role
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ProjectIAMCustomRole
      metadata:
        annotations:
          crossplane.io/external-name: external_dns_role
      spec:
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          permissions:
            - dns.resourceRecordSets.update
            - dns.resourceRecordSets.list
            - dns.managedZones.list
    patches:
      - fromFieldPath: spec.id
        toFieldPath: metadata.name
        transforms:
          - type: string
            string:
              fmt: "%s-external-dns-role"
      - type: FromCompositeFieldPath
        fromFieldPath: spec.id
        toFieldPath: spec.forProvider.project
      - fromFieldPath: spec.id
        toFieldPath: spec.forProvider.title
        transforms:
          - type: string
            string:
              fmt: "%s-external-dns-role"
      - type: PatchSet
        patchSetName: providerconfigref-patch
      - type: ToCompositeFieldPath
        fromFieldPath: status.atProvider.id
        toFieldPath: status.externalDnsRoleId

  - name: cert-manager-role
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ProjectIAMCustomRole
      metadata:
        annotations:
          crossplane.io/external-name: cert_manager_role
      spec:
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          permissions:
            - dns.resourceRecordSets.get
            - dns.resourceRecordSets.update
            - dns.resourceRecordSets.list
            - dns.managedZones.list
    patches:
      - fromFieldPath: spec.id
        toFieldPath: metadata.name
        transforms:
          - type: string
            string:
              fmt: "%s-cert-manager-role"
      - type: FromCompositeFieldPath
        fromFieldPath: spec.id
        toFieldPath: spec.forProvider.project
      - fromFieldPath: spec.id
        toFieldPath: spec.forProvider.title
        transforms:
          - type: string
            string:
              fmt: "%s-cert-manager-role"
      - type: PatchSet
        patchSetName: providerconfigref-patch
      - type: ToCompositeFieldPath
        fromFieldPath: status.atProvider.id
        toFieldPath: status.certManagerRoleId

  - name: warehouse-readonly-role
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ProjectIAMCustomRole
      metadata:
        annotations:
          crossplane.io/external-name: warehouse_read_only_role
      spec:
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          permissions:
           - storage.buckets.list
           - storage.objects.get
    patches:
      - fromFieldPath: spec.id
        toFieldPath: metadata.name
        transforms:
          - type: string
            string:
              fmt: "%s-warehouse-read-only-role"
      - type: FromCompositeFieldPath
        fromFieldPath: spec.id
        toFieldPath: spec.forProvider.project
      - fromFieldPath: spec.id
        toFieldPath: spec.forProvider.title
        transforms:
          - type: string
            string:
              fmt: "%s-warehouse-read-only-role"
      - type: PatchSet
        patchSetName: providerconfigref-patch
      - type: ToCompositeFieldPath
        fromFieldPath: status.atProvider.id
        toFieldPath: status.warehouseReadOnlyRoleId

  - name: execution-artifacts-readonly-role
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ProjectIAMCustomRole
      metadata:
        annotations:
          crossplane.io/external-name: execution_artifacts_read_only_role
      spec:
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          permissions:
           - storage.buckets.list
           - storage.objects.get
    patches:
      - fromFieldPath: spec.id
        toFieldPath: metadata.name
        transforms:
          - type: string
            string:
              fmt: "%s-execution-artifacts-read-only-role"
      - type: FromCompositeFieldPath
        fromFieldPath: spec.id
        toFieldPath: spec.forProvider.project
      - fromFieldPath: spec.id
        toFieldPath: spec.forProvider.title
        transforms:
          - type: string
            string:
              fmt: "%s-execution-artifacts-read-only-role"
      - type: PatchSet
        patchSetName: providerconfigref-patch
      - type: ToCompositeFieldPath
        fromFieldPath: status.atProvider.id
        toFieldPath: status.executionArtifactsReadOnlyRoleId

# ########
# # IAM Service Accounts
# ########

  - name: postgres-operator-gcs-backups-sa
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccount
      metadata:
        annotations:
          crossplane.io/external-name: postgres-operator-gcs-backups
        labels:
          service-account: postgres-operator-gcs-backups-sa
      spec:
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          displayName: postgres operator gcs backup Service Account
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-postgres-operator-gcs-backups-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: PatchSet
      patchSetName: providerconfigref-patch
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.email
      toFieldPath: status.postgresOperatorGCSSAEmail

  - name: mlflow-artifcats-sa
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccount
      metadata:
        annotations:
          crossplane.io/external-name: mlflow-artifacts-sa
        labels:
          service-account: mlflow-artifacts-sa
      spec:
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          displayName: "mlflow-artifacts-sa"
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-mlflow-artifacts-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: PatchSet
      patchSetName: providerconfigref-patch
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.email
      toFieldPath: status.mlflowArtifactsSAEmail

  - name: api-service-sa
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccount
      metadata:
        annotations:
          crossplane.io/external-name: api-service-sa
        labels:
          service-account: api-service-sa
      spec:
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          displayName: "api-service-sa"
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-api-service-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: PatchSet
      patchSetName: providerconfigref-patch
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.email
      toFieldPath: status.apiServiceSAEmail

  - name: data-service-sa
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccount
      metadata:
        annotations:
          crossplane.io/external-name: data-service-sa
        labels:
          service-account: data-service-sa
      spec:
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          displayName: "data-service-sa"
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-data-service-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: PatchSet
      patchSetName: providerconfigref-patch
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.email
      toFieldPath: status.dataServiceSAEmail

  - name: data-service-external-sa
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccount
      metadata:
        annotations:
          crossplane.io/external-name: data-service-external-sa
        labels:
          service-account: data-service-external-sa
      spec:
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          displayName: "data-service-external-sa"
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-data-service-external-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: PatchSet
      patchSetName: providerconfigref-patch
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.email
      toFieldPath: status.dataServiceExternalSAEmail

  - name: dataflow-listener-sa
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccount
      metadata:
        annotations:
          crossplane.io/external-name: dataflow-listener-sa
        labels:
          service-account: dataflow-listener-sa
      spec:
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          displayName: "dataflow-listener-sa"
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-dataflow-listener-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: PatchSet
      patchSetName: providerconfigref-patch
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.email
      toFieldPath: status.dataFlowListenerSAEmail

  - name: exec-service-python-sa
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccount
      metadata:
        annotations:
          crossplane.io/external-name: exec-service-python-sa
        labels:
          service-account: exec-service-python-sa
      spec:
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          displayName: "exec-service-python-sa"
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-exec-service-python-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: PatchSet
      patchSetName: providerconfigref-patch
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.email
      toFieldPath: status.execServicePythonSAEmail
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.uniqueId
      toFieldPath: status.execServicePythonSAUniqueId

  - name: data-lineage-sa
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccount
      metadata:
        annotations:
          crossplane.io/external-name: data-lineage-sa
        labels:
          service-account: data-lineage-sa
      spec:
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          displayName: "data-lineage-sa"
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-data-lineage-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: PatchSet
      patchSetName: providerconfigref-patch
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.email
      toFieldPath: status.dataLineageSAEmail

  - name: gcs-velero-sa
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccount
      metadata:
        annotations:
          crossplane.io/external-name: gcs-velero-sa
        labels:
          service-account: gcs-velero-sa
      spec:
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          displayName: "gcs-velero-sa"
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-gcs-velero-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: PatchSet
      patchSetName: providerconfigref-patch
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.email
      toFieldPath: status.gcsVeleroSAEmail

  - name: load-balancer-controller-sa
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccount
      metadata:
        annotations:
          crossplane.io/external-name: load-balancer-controller-sa
        labels:
          service-account: load-balancer-controller-sa
      spec:
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        deletionPolicy: Orphan
        forProvider:
          project: #project
          displayName: "load-balancer-controller-sa"
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-load-balancer-controller-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: PatchSet
      patchSetName: providerconfigref-patch
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.email
      toFieldPath: status.ALBSAEmail

  - name: external-data-upload-sa
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccount
      metadata:
        annotations:
          crossplane.io/external-name: external-data-upload-sa
        labels:
          service-account: external-data-upload-sa
      spec:
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          displayName: "external-data-upload-sa"
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-external-data-upload-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: dataspace-backend-sa
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccount
      metadata:
        annotations:
          crossplane.io/external-name: dataspace-backend-sa
        labels:
          service-account: dataspace-backend-sa
      spec:
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          displayName: "dataspace-backend-sa"
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-dataspace-backend-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: external-dns-sa
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccount
      metadata:
        annotations:
          crossplane.io/external-name: external-dns-sa
        labels:
          service-account: external-dns-sa
      spec:
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          displayName: "external-dns-sa"
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-external-dns-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: cert-manager-sa
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccount
      metadata:
        annotations:
          crossplane.io/external-name: cert-manager-sa
        labels:
          service-account: cert-manager-sa
      spec:
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          displayName: "cert-manager-sa"
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-cert-manager-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: warehouse-sa
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccount
      metadata:
        annotations:
          crossplane.io/external-name: warehouse-sa
        labels:
          service-account: warehouse-sa
      spec:
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          displayName: "warehouse-sa"
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-warehouse-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: spark-thrift-server-sa
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccount
      metadata:
        annotations:
          crossplane.io/external-name: spark-sa
        labels:
          service-account: spark-sa
      spec:
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          displayName: "spark-sa"
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-spark-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: metastore-sa
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccount
      metadata:
        annotations:
          crossplane.io/external-name: metastore-sa
        labels:
          service-account: metastore-sa
      spec:
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          displayName: "metastore-sa"
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-metastore-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: trino-sa
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccount
      metadata:
        annotations:
          crossplane.io/external-name: trino-sa
        labels:
          service-account: trino-sa
      spec:
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          displayName: "trino-sa"
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-trino-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: colossal-ai-sa
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccount
      metadata:
        annotations:
          crossplane.io/external-name: colossal-ai-sa
        labels:
          service-account: colossal-ai-sa
      spec:
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          displayName: "colossal-ai-sa"
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-colossal-ai-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: PatchSet
      patchSetName: providerconfigref-patch
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.email
      toFieldPath: status.colossalAiEmail

# ########
# # IAM AWS Role
# ########

  - name: exec-service-python-aws-role
    base:
      apiVersion: iam.aws.upbound.io/v1beta1
      kind: Role
      metadata:
        annotations:
          crossplane.io/external-name: aws-iam-role
      spec:
        forProvider:
          assumeRolePolicy: ""
        providerConfigRef:
          name: ubix-backoffice
    patches:
      - type: FromCompositeFieldPath
        fromFieldPath: status.projectName
        toFieldPath: metadata.name
        transforms:
          - type: string
            string:
              fmt: "%s-exec-service-python"
      - type: FromCompositeFieldPath
        fromFieldPath: status.projectName
        transforms:
          - type: string
            string:
              fmt: "%s-exec-service-python"
        toFieldPath: metadata.annotations[crossplane.io/external-name]
      - type: CombineFromComposite
        toFieldPath: spec.forProvider.assumeRolePolicy
        policy:
          fromFieldPath: Required
        combine:
          variables:
            - fromFieldPath: status.execServicePythonSAUniqueId
            - fromFieldPath: status.execServicePythonSAUniqueId
          strategy: string
          string:
            fmt: |
              {
                  "Version": "2012-10-17",
                  "Statement": [
                      {
                          "Effect": "Allow",
                          "Principal": {
                              "Federated": "accounts.google.com"
                          },
                          "Action": "sts:AssumeRoleWithWebIdentity",
                          "Condition": {
                              "StringEquals": {
                                  "accounts.google.com:aud": "%s",
                                  "accounts.google.com:sub": "%s",
                                  "accounts.google.com:oaud": "exec-service-python"

                              }
                          }
                      }
                  ]
              }
      - type: ToCompositeFieldPath
        fromFieldPath: status.atProvider.arn
        toFieldPath: status.execServicePythonAwsRoleArn
      - type: ToCompositeFieldPath
        fromFieldPath: status.atProvider.id
        toFieldPath: status.execServicePythonAwsRoleName

  - name: exec-service-python-nix-policy-attachment
    base:
      apiVersion: iam.aws.upbound.io/v1beta1
      kind: RolePolicyAttachment
      spec:
        providerConfigRef:
          name: ubix-backoffice
        forProvider:
          policyArn: arn:aws:iam::882490700787:policy/s3-write-nix
          role: #patchme
    patches:
      - fromFieldPath: status.projectName
        toFieldPath: metadata.name
        transforms:
          - type: string
            string:
              fmt: "%s-exec-service-python-nix"
        policy:
          fromFieldPath: Required
      - type: FromCompositeFieldPath
        fromFieldPath: status.execServicePythonAwsRoleName
        toFieldPath: spec.forProvider.role
        policy:
          fromFieldPath: Required

# ########
# # IAM Role-Binding
# ########

  - name: postgres-operator-gcs-backups-rolebinding
    base:
      apiVersion: storage.gcp.upbound.io/v1beta1
      kind: BucketIAMMember
      spec:
        deletionPolicy: Orphan
        forProvider:
          bucketRef:
            name: #patchme
          member: #patchme
          role: roles/storage.admin
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-postgres-operator-gcs-backups-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.bucketRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-postgres-backups'
    - type: FromCompositeFieldPath
      fromFieldPath: status.postgresOperatorGCSSAEmail
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: load-balancer-controller-rolebinding-1
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ProjectIAMMember
      spec:
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        deletionPolicy: Orphan
        forProvider:
          project: #project
          member: #patchme
          role: roles/compute.loadBalancerAdmin
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-load-balancer-controller-rolebinding-1'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: FromCompositeFieldPath
      fromFieldPath: status.ALBSAEmail
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: load-balancer-controller-rolebinding-2
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ProjectIAMMember
      spec:
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        deletionPolicy: Orphan
        forProvider:
          project: #project
          member: #patchme
          role: #patchme
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-load-balancer-controller-rolebinding-2'
    - type: FromCompositeFieldPath
      fromFieldPath: status.GCPLBGKERoleID
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.role
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: FromCompositeFieldPath
      fromFieldPath: status.ALBSAEmail
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: mlflow-artifacts-rolebinding
    base:
      apiVersion: storage.gcp.upbound.io/v1beta1
      kind: BucketIAMMember
      spec:
        deletionPolicy: Orphan
        forProvider:
          bucketRef:
            name: #patchme
          member: #patchme
          role: roles/storage.admin
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-mlflow-artifacts-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.bucketRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-mlflow-artifacts'
    - type: FromCompositeFieldPath
      fromFieldPath: status.mlflowArtifactsSAEmail
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: data-service-ingestion-artifacts-rolebinding
    base:
      apiVersion: storage.gcp.upbound.io/v1beta1
      kind: BucketIAMMember
      spec:
        deletionPolicy: Orphan
        forProvider:
          bucketRef:
            name: #patchme
          member: #patchme
          role: roles/storage.admin
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-data-service-ingestion-artifacts-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.bucketRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-ingestion-artifacts'
    - type: FromCompositeFieldPath
      fromFieldPath: status.dataServiceSAEmail
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: data-service-external-ingestion-artifacts-rolebinding
    base:
      apiVersion: storage.gcp.upbound.io/v1beta1
      kind: BucketIAMMember
      spec:
        deletionPolicy: Orphan
        forProvider:
          bucketRef:
            name: #patchme
          member: #patchme
          role: roles/storage.admin
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-data-service-external-ingestion-artifacts-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.bucketRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-ingestion-artifacts'
    - type: FromCompositeFieldPath
      fromFieldPath: status.dataServiceExternalSAEmail
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: data-flow-listener-execution-artifacts-rolebinding-readonly
    base:
      apiVersion: storage.gcp.upbound.io/v1beta1
      kind: BucketIAMMember
      spec:
        deletionPolicy: Orphan
        forProvider:
          bucketRef:
            name: #patchme
          member: #patchme
          role: roles/storage.admin
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-data-flow-listener-execution-artifacts-rolebinding-read-only'
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.bucketRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-execution-artifacts'
    - type: FromCompositeFieldPath
      fromFieldPath: status.dataFlowListenerSAEmail
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: data-flow-listener-ingestion-artifacts-rolebinding
    base:
      apiVersion: storage.gcp.upbound.io/v1beta1
      kind: BucketIAMMember
      spec:
        deletionPolicy: Orphan
        forProvider:
          bucketRef:
            name: #patchme
          member: #patchme
          role: roles/storage.admin
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-data-flow-listener-ingestion-artifacts-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.bucketRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-ingestion-artifacts'
    - type: FromCompositeFieldPath
      fromFieldPath: status.dataFlowListenerSAEmail
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: data-flow-listener-mlflow-artifacts-rolebinding
    base:
      apiVersion: storage.gcp.upbound.io/v1beta1
      kind: BucketIAMMember
      spec:
        deletionPolicy: Orphan
        forProvider:
          bucketRef:
            name: #patchme
          member: #patchme
          role: roles/storage.admin
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-data-flow-listener-mlflow-artifacts-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.bucketRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-mlflow-artifacts'
    - type: FromCompositeFieldPath
      fromFieldPath: status.dataFlowListenerSAEmail
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: dataflow-warehouse-full-access-rolebinding
    base:
      apiVersion: storage.gcp.upbound.io/v1beta1
      kind: BucketIAMMember
      spec:
        deletionPolicy: Orphan
        forProvider:
          bucketRef:
            name: #patchme
          member: #patchme
          role: roles/storage.admin
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-data-flow-warehouse-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.bucketRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-warehouse'
    - type: FromCompositeFieldPath
      fromFieldPath: status.dataFlowListenerSAEmail
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: spark-warehouse-full-access-rolebinding
    base:
      apiVersion: storage.gcp.upbound.io/v1beta1
      kind: BucketIAMMember
      spec:
        deletionPolicy: Orphan
        forProvider:
          bucketRef:
            name: #patchme
          member: #patchme
          role: roles/storage.admin
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-spark-warehouse-full-access-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.bucketRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-warehouse'
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:spark-sa@%s.iam.gserviceaccount.com'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: metastore-warehouse-full-access-rolebinding
    base:
      apiVersion: storage.gcp.upbound.io/v1beta1
      kind: BucketIAMMember
      spec:
        deletionPolicy: Orphan
        forProvider:
          bucketRef:
            name: #patchme
          member: #patchme
          role: roles/storage.admin
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-metastore-warehouse-full-access-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.bucketRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-warehouse'
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:metastore-sa@%s.iam.gserviceaccount.com'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: trino-warehouse-read-only-rolebinding
    base:
      apiVersion: storage.gcp.upbound.io/v1beta1
      kind: BucketIAMMember
      spec:
        deletionPolicy: Orphan
        forProvider:
          bucketRef:
            name: #patchme
          member: #patchme
          role: #patchme
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-trino-warehouse-read-only-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.bucketRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-warehouse'
    - type: FromCompositeFieldPath
      fromFieldPath: status.warehouseReadOnlyRoleId
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.role
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:trino-sa@%s.iam.gserviceaccount.com'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: exec-service-python-execution-artifacts-rolebinding
    base:
      apiVersion: storage.gcp.upbound.io/v1beta1
      kind: BucketIAMMember
      spec:
        deletionPolicy: Orphan
        forProvider:
          bucketRef:
            name: #patchme
          member: #patchme
          role: roles/storage.admin
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-exec-service-python-execution-artifacts-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.bucketRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-execution-artifacts'
    - type: FromCompositeFieldPath
      fromFieldPath: status.execServicePythonSAEmail
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: exec-service-warehouse-rolebinding
    base:
      apiVersion: storage.gcp.upbound.io/v1beta1
      kind: BucketIAMMember
      spec:
        deletionPolicy: Orphan
        forProvider:
          bucketRef:
            name: #patchme
          member: #patchme
          role: roles/storage.admin
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-exec-service-python-warehouse-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.bucketRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-warehouse'
    - type: FromCompositeFieldPath
      fromFieldPath: status.execServicePythonSAEmail
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: warehouse-rolebinding
    base:
      apiVersion: storage.gcp.upbound.io/v1beta1
      kind: BucketIAMMember
      spec:
        deletionPolicy: Orphan
        forProvider:
          bucketRef:
            name: #patchme
          member: #patchme
          role: roles/storage.admin
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-warehouse-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.bucketRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-warehouse'
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:warehouse-sa@%s.iam.gserviceaccount.com'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: exec-service-python-mlflow-artifacts-rolebinding
    base:
      apiVersion: storage.gcp.upbound.io/v1beta1
      kind: BucketIAMMember
      spec:
        deletionPolicy: Orphan
        forProvider:
          bucketRef:
            name: #patchme
          member: #patchme
          role: roles/storage.admin
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-exec-service-python-mlflow-artifacts-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.bucketRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-mlflow-artifacts'
    - type: FromCompositeFieldPath
      fromFieldPath: status.execServicePythonSAEmail
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: artifact-registry-rolebinding
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ProjectIAMMember
      spec:
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          member: #patchme
          role: roles/artifactregistry.reader
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-registry-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: FromCompositeFieldPath
      fromFieldPath: status.gkeNodePoolSAEmail
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: external-dns-rolebinding
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ProjectIAMMember
      spec:
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          member: #patchme
          role: #patchme
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-external-dns'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: FromCompositeFieldPath
      fromFieldPath: status.externalDnsRoleId
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.role
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:external-dns-sa@%s.iam.gserviceaccount.com'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: cert-manager-rolebinding
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ProjectIAMMember
      spec:
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          member: #patchme
          role: #patchme
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-cert-manager'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: FromCompositeFieldPath
      fromFieldPath: status.certManagerRoleId
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.role
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:cert-manager-sa@%s.iam.gserviceaccount.com'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: dns-administrator-external-dns-rolebinding
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ProjectIAMMember
      spec:
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          member: #patchme
          role: roles/dns.admin
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-external-dns-administrator'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:external-dns-sa@%s.iam.gserviceaccount.com'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: dns-administrator-cert-manager-rolebinding
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ProjectIAMMember
      spec:
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          member: #patchme
          role: roles/dns.admin
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-cert-manager-administrator'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:cert-manager-sa@%s.iam.gserviceaccount.com'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: api-service-execution-artifacts-rolebinding
    base:
      apiVersion: storage.gcp.upbound.io/v1beta1
      kind: BucketIAMMember
      spec:
        deletionPolicy: Orphan
        forProvider:
          bucketRef:
            name: #patchme
          member: #patchme
          role: roles/storage.admin
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-api-service-execution-artifacts-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.bucketRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-execution-artifacts'
    - type: FromCompositeFieldPath
      fromFieldPath: status.apiServiceSAEmail
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: api-service-mlflow-artifacts-rolebinding
    base:
      apiVersion: storage.gcp.upbound.io/v1beta1
      kind: BucketIAMMember
      spec:
        deletionPolicy: Orphan
        forProvider:
          bucketRef:
            name: #patchme
          member: #patchme
          role: roles/storage.admin
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-api-service-mlflow-artifacts-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.bucketRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-mlflow-artifacts'
    - type: FromCompositeFieldPath
      fromFieldPath: status.apiServiceSAEmail
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: data-lineage-execution-artifacts-rolebinding
    base:
      apiVersion: storage.gcp.upbound.io/v1beta1
      kind: BucketIAMMember
      spec:
        deletionPolicy: Orphan
        forProvider:
          bucketRef:
            name: #patchme
          member: #patchme
          role: roles/storage.admin
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-data-lineage-execution-artifacts-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.bucketRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-execution-artifacts'
    - type: FromCompositeFieldPath
      fromFieldPath: status.dataLineageSAEmail
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: data-lineage-ingestion-artifacts-rolebinding
    base:
      apiVersion: storage.gcp.upbound.io/v1beta1
      kind: BucketIAMMember
      spec:
        deletionPolicy: Orphan
        forProvider:
          bucketRef:
            name: #patchme
          member: #patchme
          role: roles/storage.admin
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-data-lineage-ingestion-artifacts-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.bucketRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-ingestion-artifacts'
    - type: FromCompositeFieldPath
      fromFieldPath: status.dataLineageSAEmail
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: external-data-upload-rolebinding
    base:
      apiVersion: storage.gcp.upbound.io/v1beta1
      kind: BucketIAMMember
      spec:
        deletionPolicy: Orphan
        forProvider:
          bucketRef:
            name: #patchme
          member: #patchme
          role: roles/storage.admin
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-external-data-upload-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.bucketRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-ingestion-artifacts'
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:external-data-upload-sa@%s.iam.gserviceaccount.com'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: dataspace-backend-rolebinding
    base:
      apiVersion: storage.gcp.upbound.io/v1beta1
      kind: BucketIAMMember
      spec:
        deletionPolicy: Orphan
        forProvider:
          bucketRef:
            name: #patchme
          member: #patchme
          role: roles/storage.admin
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-dataspace-backend-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.bucketRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-ingestion-artifacts'
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:dataspace-backend-sa@%s.iam.gserviceaccount.com'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: dataspace-backend-warehouse-readonly-rolebinding
    base:
      apiVersion: storage.gcp.upbound.io/v1beta1
      kind: BucketIAMMember
      spec:
        deletionPolicy: Orphan
        forProvider:
          bucketRef:
            name: #patchme
          member: #patchme
          role: roles/storage.admin
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-dataspace-backend-warehouse-readonly-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.bucketRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-warehouse'
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:dataspace-backend-sa@%s.iam.gserviceaccount.com'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: gcs-velero-rolebinding
    base:
      apiVersion: storage.gcp.upbound.io/v1beta1
      kind: BucketIAMMember
      spec:
        deletionPolicy: Orphan
        forProvider:
          bucketRef:
            name: #patchme
          member: #patchme
          role: roles/storage.admin
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-gcs-velero-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.bucketRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-velero'
    - type: FromCompositeFieldPath
      fromFieldPath: status.gcsVeleroSAEmail
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s'
    - type: PatchSet
      patchSetName: providerconfigref-patch

# ########
# # KSA Role-Binding
# ########

  # - name: workloadidentityUser-ksa-rolebinding
  #   base:
  #     apiVersion: storage.gcp.upbound.io/v1beta1
  #     kind: ServiceAccountPolicy
  #   spec:
  #     forProvider:
  #       project:
  #       policy:
  #         bindings:
  #           - members:
  #             - serviceAccount:PROJECT_ID.svc.id.goog[data-tooling/spark]
  #             - serviceAccount:PROJECT_ID.svc.id.goog[data-tooling/spark-historyserver]
  #             - serviceAccount:PROJECT_ID.svc.id.goog[data-tooling/dataflow-leader]
  #             - serviceAccount:PROJECT_ID.svc.id.goog[data-tooling/dataflow-listener]
  #             - serviceAccount:PROJECT_ID.svc.id.goog[addons/cert-manager]
  #             - serviceAccount:PROJECT_ID.svc.id.goog[addons/external-dns]
  #             - serviceAccount:PROJECT_ID.svc.id.goog[databases/harbor]
  #             - serviceAccount:PROJECT_ID.svc.id.goog[databases/postgres-pod]
  #             role: roles/iam.workloadIdentityUser
  #   patches:
  #     - type: FromCompositeFieldPath
  #       fromFieldPath: spec.id
  #       toFieldPath: spec.forProvider.project.policy.bindings.members
  #       transforms:
  #         - type: map
  #           map:
  #             - type: string
  #               string:
  #                 fmt: '%s'
  #             - type: replace
  #               replace:
  #                 regex: 'PROJECT_ID'
  #               with: '%s'

  - name: workload-identity-spark-iambinding
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccountIAMMember
      spec:
        deletionPolicy: Orphan
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        forProvider:
          member: #patchme
          role: roles/iam.workloadIdentityUser
          serviceAccountIdRef:
            name: #patchme
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-gke-workload-identity-spark-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.serviceAccountIdRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-spark-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s.svc.id.goog[data-tooling/spark]'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: workload-identity-metastore-iambinding
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccountIAMMember
      spec:
        deletionPolicy: Orphan
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        forProvider:
          member: #patchme
          role: roles/iam.workloadIdentityUser
          serviceAccountIdRef:
            name: #patchme
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-gke-workload-identity-metastore-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.serviceAccountIdRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-metastore-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s.svc.id.goog[data-tooling/metastore]'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: workload-identity-data-service-iambinding
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccountIAMMember
      spec:
        deletionPolicy: Orphan
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        forProvider:
          member: #patchme
          role: roles/iam.workloadIdentityUser
          serviceAccountIdRef:
            name: #patchme
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-gke-workload-identity-data-service-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.serviceAccountIdRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-data-service-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s.svc.id.goog[data-tooling/data-service]'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: workload-identity-data-service-external-iambinding
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccountIAMMember
      spec:
        deletionPolicy: Orphan
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        forProvider:
          member: #patchme
          role: roles/iam.workloadIdentityUser
          serviceAccountIdRef:
            name: #patchme
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-gke-workload-identity-data-service-external-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.serviceAccountIdRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-data-service-external-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s.svc.id.goog[data-tooling/data-service-external]'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: workload-identity-dataspace-iambinding
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccountIAMMember
      spec:
        deletionPolicy: Orphan
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        forProvider:
          member: #patchme
          role: roles/iam.workloadIdentityUser
          serviceAccountIdRef:
            name: #patchme
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-gke-workload-identity-dataspace-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.serviceAccountIdRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-dataspace-backend-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s.svc.id.goog[services/dataspace]'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: workload-identity-dataspace-backend-iambinding
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccountIAMMember
      spec:
        deletionPolicy: Orphan
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        forProvider:
          member: #patchme
          role: roles/iam.workloadIdentityUser
          serviceAccountIdRef:
            name: #patchme
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-gke-workload-identity-dataspace-backend-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.serviceAccountIdRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-dataspace-backend-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s.svc.id.goog[services/dataspace-backend]'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: workload-identity-data-lineage-iambinding
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccountIAMMember
      spec:
        deletionPolicy: Orphan
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        forProvider:
          member: #patchme
          role: roles/iam.workloadIdentityUser
          serviceAccountIdRef:
            name: #patchme
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-gke-workload-identity-data-lineage-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.serviceAccountIdRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-data-lineage-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s.svc.id.goog[services/data-lineage]'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: workload-identity-mlflow-artifacts-iambinding
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccountIAMMember
      spec:
        deletionPolicy: Orphan
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        forProvider:
          member: #patchme
          role: roles/iam.workloadIdentityUser
          serviceAccountIdRef:
            name: #patchme
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-gke-workload-identity-mlflow-artifacts-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.serviceAccountIdRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-mlflow-artifacts-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s.svc.id.goog[data-tooling/mlflow]'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: workload-identity-colossal-iambinding
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccountIAMMember
      spec:
        deletionPolicy: Orphan
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        forProvider:
          member: #patchme
          role: roles/iam.workloadIdentityUser
          serviceAccountIdRef:
            name: #patchme
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-gke-workload-identity-colossal-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.serviceAccountIdRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-colossal-ai-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s.svc.id.goog[data-tooling/chatubix-api]'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: workload-identity-postgres-pod-iambinding
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccountIAMMember
      spec:
        deletionPolicy: Orphan
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        forProvider:
          member: #patchme
          role: roles/iam.workloadIdentityUser
          serviceAccountIdRef:
            name: #patchme
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-gke-workload-identity-postgres-pod-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.serviceAccountIdRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-postgres-operator-gcs-backups-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s.svc.id.goog[addons/postgres-pod]'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: workload-identity-trino-iambinding
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccountIAMMember
      spec:
        deletionPolicy: Orphan
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        forProvider:
          member: #patchme
          role: roles/iam.workloadIdentityUser
          serviceAccountIdRef:
            name: #patchme
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-gke-workload-identity-trino-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.serviceAccountIdRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-trino-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s.svc.id.goog[data-tooling/trino]'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: workload-identity-dataflow-listener-iambinding
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccountIAMMember
      spec:
        deletionPolicy: Orphan
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        forProvider:
          member: #patchme
          role: roles/iam.workloadIdentityUser
          serviceAccountIdRef:
            name: #patchme
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-gke-workload-identity-dataflow-listener-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.serviceAccountIdRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-dataflow-listener-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s.svc.id.goog[data-tooling/dataflow-listener]'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: workload-identity-cert-manager-iambinding
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccountIAMMember
      spec:
        deletionPolicy: Orphan
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        forProvider:
          member: #patchme
          role: roles/iam.workloadIdentityUser
          serviceAccountIdRef:
            name: #patchme
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-gke-workload-identity-cert-manager-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.serviceAccountIdRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-cert-manager-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s.svc.id.goog[addons/cert-manager]'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: workload-identity-exec-service-python-iambinding
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccountIAMMember
      spec:
        deletionPolicy: Orphan
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        forProvider:
          member: #patchme
          role: roles/iam.workloadIdentityUser
          serviceAccountIdRef:
            name: #patchme
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-gke-workload-identity-exec-service-python-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.serviceAccountIdRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-exec-service-python-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s.svc.id.goog[services/exec-service-python]'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: workload-identity-external-dns-iambinding
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccountIAMMember
      spec:
        deletionPolicy: Orphan
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        forProvider:
          member: #patchme
          role: roles/iam.workloadIdentityUser
          serviceAccountIdRef:
            name: #patchme
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-gke-workload-identity-external-dns-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.serviceAccountIdRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-external-dns-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s.svc.id.goog[addons/external-dns]'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: workload-identity-harbor-iambinding
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccountIAMMember
      spec:
        deletionPolicy: Orphan
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        forProvider:
          member: #patchme
          role: roles/iam.workloadIdentityUser
          serviceAccountIdRef:
            name: #patchme
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-gke-workload-identity-harbor-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.serviceAccountIdRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-harbor-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s.svc.id.goog[databases/harbor]'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: workload-identity-postgres-operator-gcs-backups-iambinding
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccountIAMMember
      spec:
        deletionPolicy: Orphan
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        forProvider:
          member: #patchme
          role: roles/iam.workloadIdentityUser
          serviceAccountIdRef:
            name: #patchme
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-gke-workload-identity-postgres-operator-gcs-backups-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.serviceAccountIdRef.name
      transforms:
      - type: string
        string:
          fmt: '%s-postgres-operator-gcs-backups-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:%s.svc.id.goog[databases/postgres-pod]'
    - type: PatchSet
      patchSetName: providerconfigref-patch


# #####
# # ArgoCD
# #####

  - name: argocd-secret-remote-cluster-credentials
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        #deletionPolicy: Orphan
        forProvider:
          manifest:
            apiVersion: v1
            kind: Secret
            metadata:
              name: # patched
              namespace: argocd
              labels:
                argocd.argoproj.io/secret-type: cluster
            type: Opaque
            stringData:
              name: #patched
              server: #patched
              config: #patched
        providerConfigRef:
          name: kubernetes-provider
    patches:
      - type: FromCompositeFieldPath
        fromFieldPath: spec.id
        toFieldPath: metadata.name
      - type: FromCompositeFieldPath
        fromFieldPath: spec.id
        toFieldPath: spec.forProvider.manifest.metadata.name
        transforms:
          - type: string
            string:
              fmt: "%s-argocd-cluster-secret"
      - type: FromCompositeFieldPath
        fromFieldPath: spec.id
        toFieldPath: spec.forProvider.manifest.stringData.name
      - type: FromCompositeFieldPath
        fromFieldPath: status.clusterEndpoint
        toFieldPath: spec.forProvider.manifest.stringData.server
        policy:
          fromFieldPath: Required
        transforms:
          - type: string
            string:
              fmt: "https://%s"
      - type: FromCompositeFieldPath
        policy:
          fromFieldPath: Required
        fromFieldPath: status.clusterCertificateAuthorityData
        toFieldPath: spec.forProvider.manifest.stringData.config
        transforms:
          - type: string
            string:
              fmt: |
                {
                  "execProviderConfig": {
                    "command": "argocd-k8s-auth",
                    "args": ["gcp"],
                    "apiVersion": "client.authentication.k8s.io/v1beta1"
                  },
                  "tlsClientConfig": {
                    "insecure": false,
                    "caData": "%s"
                  }
                }

# #####
# # Cloud DNS
# #####

  - name: cloud-dns-zone
    base:
      apiVersion: dns.gcp.upbound.io/v1beta1
      kind: ManagedZone
      spec:
        forProvider:
          project: #patchme
          description: #patchme
          dnsName: #patchme
          visibility: public
        deletionPolicy: Orphan
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.dnsName
      transforms:
        - type: string
          string:
            fmt: "%s.ubix.io."
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.description
      transforms:
        - type: string
          string:
            fmt: "%s.ubix.io-ZONE"
    - type: PatchSet
      patchSetName: providerconfigref-patch
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.nameServers
      toFieldPath: status.zoneNameServers
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.id
      toFieldPath: status.zoneId

  - name: route53-record
    base:
      apiVersion: route53.aws.upbound.io/v1beta1
      kind: Record
      spec:
        #deletionPolicy: Orphan
        forProvider:
          name: #patchme
          type: NS
          ttl: 300
          zoneId: {{ .Values.zoneId }}
          region: us-east-1
        providerConfigRef:
          name: root
    patches:
      - type: FromCompositeFieldPath
        fromFieldPath: spec.id
        toFieldPath: metadata.name
      - type: FromCompositeFieldPath
        fromFieldPath: spec.id
        toFieldPath: spec.forProvider.name
      - type: FromCompositeFieldPath
        fromFieldPath: status.zoneNameServers
        toFieldPath: spec.forProvider.records
        policy:
          fromFieldPath: Required

# #####
# # GCP Certificate Resources
# #####

  # - name: gcp-managedsslcertificates
  #   base:
  #     apiVersion: compute.gcp.upbound.io/v1beta1
  #     kind: ManagedSSLCertificate
  #     metadata:
  #       name: #patchme
  #     spec:
  #       forProvider:
  #         managed:
  #           - domains:
  #               - #patchme
  #               - #patchme
  #               - #patchme
  #               - #patchme
  #               - #patchme
  #               - #patchme
  #               - #patchme
  #               - #patchme
  #               - #patchme
  #               - #patchme
  #               - #patchme
  #         project: #patchme
  #   patches:
  #   - type: FromCompositeFieldPath
  #     fromFieldPath: spec.id
  #     toFieldPath: spec.forProvider.managed[0].domains[0]
  #     transforms:
  #     - type: string
  #       string:
  #         fmt: 'alloy.%s.ubix.io'
  #   - type: FromCompositeFieldPath
  #     fromFieldPath: spec.id
  #     toFieldPath: spec.forProvider.managed[0].domains[1]
  #     transforms:
  #     - type: string
  #       string:
  #         fmt: 'grafana.%s.ubix.io'
  #   - type: FromCompositeFieldPath
  #     fromFieldPath: spec.id
  #     toFieldPath: spec.forProvider.managed[0].domains[2]
  #     transforms:
  #     - type: string
  #       string:
  #         fmt: 'colossal-ai.%s.ubix.io'
  #   - type: FromCompositeFieldPath
  #     fromFieldPath: spec.id
  #     toFieldPath: spec.forProvider.managed[0].domains[3]
  #     transforms:
  #     - type: string
  #       string:
  #         fmt: 'data-service.%s.ubix.io'
  #   - type: FromCompositeFieldPath
  #     fromFieldPath: spec.id
  #     toFieldPath: spec.forProvider.managed[0].domains[4]
  #     transforms:
  #     - type: string
  #       string:
  #         fmt: 'pgadmin.%s.ubix.io'
  #   - type: FromCompositeFieldPath
  #     fromFieldPath: spec.id
  #     toFieldPath: spec.forProvider.managed[0].domains[5]
  #     transforms:
  #     - type: string
  #       string:
  #         fmt: 'chatubix.%s.ubix.io'
  #   - type: FromCompositeFieldPath
  #     fromFieldPath: spec.id
  #     toFieldPath: spec.forProvider.managed[0].domains[6]
  #     transforms:
  #     - type: string
  #       string:
  #         fmt: 'datalineage.%s.ubix.io'
  #   - type: FromCompositeFieldPath
  #     fromFieldPath: spec.id
  #     toFieldPath: spec.forProvider.managed[0].domains[7]
  #     transforms:
  #     - type: string
  #       string:
  #         fmt: 'dataspace.%s.ubix.io'
  #   - type: FromCompositeFieldPath
  #     fromFieldPath: spec.id
  #     toFieldPath: spec.forProvider.managed[0].domains[8]
  #     transforms:
  #     - type: string
  #       string:
  #         fmt: 'modelspace.%s.ubix.io'
  #   - type: FromCompositeFieldPath
  #     fromFieldPath: spec.id
  #     toFieldPath: spec.forProvider.managed[0].domains[9]
  #     transforms:
  #     - type: string
  #       string:
  #         fmt: 'productionspace.%s.ubix.io'
  #   - type: FromCompositeFieldPath
  #     fromFieldPath: spec.id
  #     toFieldPath: spec.forProvider.managed[0].domains[10]
  #     transforms:
  #     - type: string
  #       string:
  #         fmt: 'solutionspace.%s.ubix.io'
  #   - type: FromCompositeFieldPath
  #     fromFieldPath: spec.id
  #     toFieldPath: spec.forProvider.project
  #   - type: FromCompositeFieldPath
  #     fromFieldPath: spec.id
  #     toFieldPath: metadata.name
  #     transforms:
  #     - type: string
  #       string:
  #         fmt: '%s-managed-certificate'
  #   - type: PatchSet
  #     patchSetName: providerconfigref-patch

# #####
# # GCP LB Resources
# #####

  - name: gcp-lb-sa
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccount
      metadata:
        annotations:
          crossplane.io/external-name: gcp-lb-sa
        labels:
          service-account: gcp-lb-sa
      spec:
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-gcp-lb-controller-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: gcp-lb-controller-rolebinding
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ProjectIAMMember
      spec:
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          member: #patchme
          role: roles/compute.loadBalancerAdmin
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-gcp-lb-controller-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:gcp-lb-sa@%s.iam.gserviceaccount.com'
    - type: PatchSet
      patchSetName: providerconfigref-patch

# #####
# # GCS
# #####

  - name: execution-artifacts-bucket
    base:
      apiVersion: storage.gcp.upbound.io/v1beta1
      kind: Bucket
      metadata:
        annotations:
          crossplane.io/external-name: #patchme
      spec:
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          location: #patchme
          storageClass: STANDARD
          versioning:
          - enabled: true
          uniformBucketLevelAccess: true
          publicAccessPrevention: "enforced"
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      transforms:
      - type: string
        string:
          fmt: "%s-execution-artifacts"
      toFieldPath: metadata.name
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectNumber
      policy:
        fromFieldPath: Required
      transforms:
        - type: string
          string:
            fmt: "execution-artifacts-%s"
      toFieldPath: metadata.annotations[crossplane.io/external-name]
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.region
      toFieldPath: spec.forProvider.location
    - type: PatchSet
      patchSetName: providerconfigref-patch
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.id
      toFieldPath: status.executionArtifactsBucketName

  - name: ingestion-artifacts-bucket
    base:
      apiVersion: storage.gcp.upbound.io/v1beta1
      kind: Bucket
      metadata:
        annotations:
          crossplane.io/external-name: #patchme
      spec:
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          location: #patchme
          publicAccessPrevention: "enforced"
          cors:
          - origin:
              - #patchme
            method:
              - "PUT"
            responseHeader:
              - "*"
            maxAgeSeconds: 6000
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      transforms:
      - type: string
        string:
          fmt: "%s-ingestion-artifacts"
      toFieldPath: metadata.name
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectNumber
      policy:
        fromFieldPath: Required
      transforms:
        - type: string
          string:
            fmt: "ingestion-artifacts-%s"
      toFieldPath: metadata.annotations[crossplane.io/external-name]
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.region
      toFieldPath: spec.forProvider.location
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.cors[0].origin[0]
      transforms:
        - type: string
          string:
            fmt: 'https://dataspace.%s.ubix.io'
    - type: PatchSet
      patchSetName: providerconfigref-patch
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.id
      toFieldPath: status.ingestionArtifactsBucketName

  - name: mlflow-artifacts-bucket
    base:
      apiVersion: storage.gcp.upbound.io/v1beta1
      kind: Bucket
      metadata:
        annotations:
          crossplane.io/external-name: #patchme
      spec:
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          location: #patchme
          publicAccessPrevention: "enforced"
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      transforms:
      - type: string
        string:
          fmt: "%s-mlflow-artifacts"
      toFieldPath: metadata.name
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectNumber
      policy:
        fromFieldPath: Required
      transforms:
        - type: string
          string:
            fmt: "mlflow-artifacts-%s"
      toFieldPath: metadata.annotations[crossplane.io/external-name]
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.region
      toFieldPath: spec.forProvider.location
    - type: PatchSet
      patchSetName: providerconfigref-patch
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.id
      toFieldPath: status.mlflowArtifactsBucketName

  - name: postgres-backups-bucket
    base:
      apiVersion: storage.gcp.upbound.io/v1beta1
      kind: Bucket
      metadata:
        annotations:
          crossplane.io/external-name: #patchme
      spec:
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          location: #patchme
          publicAccessPrevention: "enforced"
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      transforms:
      - type: string
        string:
          fmt: "%s-postgres-backups"
      toFieldPath: metadata.name
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectNumber
      policy:
        fromFieldPath: Required
      transforms:
      - type: string
        string:
          fmt: "postgres-backups-%s"
      toFieldPath: metadata.annotations[crossplane.io/external-name]
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.region
      toFieldPath: spec.forProvider.location
    - type: PatchSet
      patchSetName: providerconfigref-patch
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.id
      toFieldPath: status.postgresBackupsBucketName

  - name: velero-gcs-bucket
    base:
      apiVersion: storage.gcp.upbound.io/v1beta1
      kind: Bucket
      metadata:
        annotations:
          crossplane.io/external-name: #patchme
      spec:
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          location: #patchme
          publicAccessPrevention: "enforced"
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      transforms:
      - type: string
        string:
          fmt: "%s-velero"
      toFieldPath: metadata.name
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectNumber
      policy:
        fromFieldPath: Required
      transforms:
      - type: string
        string:
          fmt: "velero-%s"
      toFieldPath: metadata.annotations[crossplane.io/external-name]
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.region
      toFieldPath: spec.forProvider.location
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: warehouse-bucket
    base:
      apiVersion: storage.gcp.upbound.io/v1beta1
      kind: Bucket
      metadata:
        annotations:
          crossplane.io/external-name: #patchme
      spec:
        deletionPolicy: Orphan
        forProvider:
          project: #patchme
          location: #patchme
          publicAccessPrevention: "enforced"
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      transforms:
      - type: string
        string:
          fmt: "%s-warehouse"
      toFieldPath: metadata.name
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectNumber
      policy:
        fromFieldPath: Required
      transforms:
      - type: string
        string:
          fmt: "warehouse-%s"
      toFieldPath: metadata.annotations[crossplane.io/external-name]
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.region
      toFieldPath: spec.forProvider.location
    - type: PatchSet
      patchSetName: providerconfigref-patch

# #####
# # Harbor Resources
# #####

  - name: harbor-sa
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ServiceAccount
      metadata:
        annotations:
          crossplane.io/external-name: harbor-sa
        labels:
          service-account: harbor-sa
      spec:
        deletionPolicy: Orphan
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        forProvider:
          project: #patchme
          displayName: Harbor Service Account
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-harbor-sa'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: harbor-rolebinding
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ProjectIAMMember
      spec:
        deletionPolicy: Orphan
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        forProvider:
          project: #patchme
          member: #patchme
          role: roles/artifactregistry.admin
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-harbor-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:harbor-sa@%s.iam.gserviceaccount.com'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: metastore-rolebinding
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ProjectIAMMember
      spec:
        deletionPolicy: Orphan
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        forProvider:
          project: #patchme
          member: #patchme
          role: roles/storage.objectAdmin
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-metastore-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:metastore-sa@%s.iam.gserviceaccount.com'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: trino-rolebinding
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ProjectIAMMember
      spec:
        deletionPolicy: Orphan
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        forProvider:
          project: #patchme
          member: #patchme
          role: roles/storage.objectAdmin
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-trino-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:trino-sa@%s.iam.gserviceaccount.com'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: dataspace-backend-token-creator-rolebinding
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ProjectIAMMember
      spec:
        deletionPolicy: Orphan
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        forProvider:
          project: #patchme
          member: #patchme
          role: roles/iam.serviceAccountTokenCreator
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-dataspace-backend-token-craetor-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:dataspace-backend-sa@%s.iam.gserviceaccount.com'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: exec-service-python-rolebinding
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ProjectIAMMember
      spec:
        deletionPolicy: Orphan
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        forProvider:
          project: #patchme
          member: #patchme
          role: roles/storage.admin
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-exec-service-python-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:exec-service-python-sa@%s.iam.gserviceaccount.com'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: exec-service-python-token-creator-rolebinding
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ProjectIAMMember
      spec:
        deletionPolicy: Orphan
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        forProvider:
          project: #patchme
          member: #patchme
          role: roles/iam.serviceAccountTokenCreator
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-exec-service-python-token-creator-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:exec-service-python-sa@%s.iam.gserviceaccount.com'
    - type: PatchSet
      patchSetName: providerconfigref-patch


  - name: spark-rolebinding
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ProjectIAMMember
      spec:
        deletionPolicy: Orphan
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        forProvider:
          project: #patchme
          member: #patchme
          role: roles/storage.admin
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-spark-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:spark-sa@%s.iam.gserviceaccount.com'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: spark-token-creator-rolebinding
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ProjectIAMMember
      spec:
        deletionPolicy: Orphan
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        forProvider:
          project: #patchme
          member: #patchme
          role: roles/iam.serviceAccountTokenCreator
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-spark-token-creator-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:spark-sa@%s.iam.gserviceaccount.com'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: gke-nodepool-sa-artifact-registry-rolebinding
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ProjectIAMMember
      spec:
        deletionPolicy: Orphan
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        forProvider:
          project: #patchme
          member: #patchme
          role: roles/artifactregistry.admin
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-gke-nodepool-sa-artifact-registry-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:gke-nodepool-sa@%s.iam.gserviceaccount.com'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: gke-nodepool-storage-admin-rolebinding
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ProjectIAMMember
      spec:
        deletionPolicy: Orphan
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        forProvider:
          project: #patchme
          member: #patchme
          role: roles/compute.storageAdmin
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-gke-nodepool-storage-admin-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:gke-nodepool-sa@%s.iam.gserviceaccount.com'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: gke-nodepool-token-creator-rolebinding
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ProjectIAMMember
      spec:
        deletionPolicy: Orphan
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        forProvider:
          project: #patchme
          member: #patchme
          role: roles/iam.serviceAccountTokenCreator
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-gke-nodepool-token-creator-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: spec.forProvider.project
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:gke-nodepool-sa@%s.iam.gserviceaccount.com'
    - type: PatchSet
      patchSetName: providerconfigref-patch

  - name: gke-nodepool-token-creator-rolebinding-ubix-crossplane-gcp
    base:
      apiVersion: cloudplatform.gcp.upbound.io/v1beta1
      kind: ProjectIAMMember
      spec:
        deletionPolicy: Orphan
        providerConfigRef:
          name: #patchme
          policy:
            resolve: "Always"
        forProvider:
          project: ubix-crossplane-gcp
          member: #patchme
          role: roles/artifactregistry.reader
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: '%s-gke-nodepool-artifact-registry-reader-rolebinding'
    - type: FromCompositeFieldPath
      fromFieldPath: status.projectName
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.member
      transforms:
      - type: string
        string:
          fmt: 'serviceAccount:gke-nodepool-sa@%s.iam.gserviceaccount.com'
    - type: PatchSet
      patchSetName: providerconfigref-patch

#####
# Grafana Resources
#####

  - name: grafana-data-sources
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        #deletionPolicy: Orphan
        forProvider:
          manifest:
            apiVersion: v1
            kind: Secret
            metadata:
              name: # patched
              namespace: addons
              labels:
                grafana_datasource: "1"
            # stringData:
              # name: # patched
              # server: # patched
              # config:
              #   awsAuthConfig:
              #       clusterName: # patched
              #       roleARN: # patched
            type: Opaque
        providerConfigRef:
          name: kubernetes-provider
    patches:
      - type: FromCompositeFieldPath
        fromFieldPath: spec.id
        toFieldPath: metadata.name
        transforms:
          - type: string
            string:
              fmt: "%s-grafana-data-sources"
      - type: FromCompositeFieldPath
        fromFieldPath: spec.id
        toFieldPath: spec.forProvider.manifest.metadata.name
        transforms:
          - type: string
            string:
              fmt: "%s-grafana-data-sources"
      - type: CombineFromComposite
        policy:
          fromFieldPath: Required
        toFieldPath: spec.forProvider.manifest.stringData
        combine:
          variables:
            - fromFieldPath: spec.id
            - fromFieldPath: spec.id
            - fromFieldPath: spec.id
            - fromFieldPath: spec.id
            - fromFieldPath: spec.id
            - fromFieldPath: spec.id
            - fromFieldPath: spec.id
            - fromFieldPath: spec.id
            - fromFieldPath: spec.id
            - fromFieldPath: spec.id
          strategy: string
          string:
            # this section needs to be like this due to crossplane limitations.
            # to edit the grafana yaml copy the string value and use a json to yaml converter
            # then copy it back using the single line json format
            fmt: '{"%s.yaml": "apiVersion: 1\ndeleteDatasources:\n- name: Mimir %s\n- name: Tempo %s\n- name: Loki %s\ndatasources:\n- name: Mimir %s\n  type: prometheus\n  typeName: Prometheus\n  typeLogoUrl: https://grafana.com/static/img/logos/logo-mimir.svg\n  access: proxy\n  url: http://mimir-gateway/prometheus\n  basicAuth: true\n  basicAuthUser: {{ .Values.mimir.user }}\n  jsonData:\n    httpHeaderName1: \"X-Scope-OrgID\"\n  secureJsonData:\n    httpHeaderValue1: \"%s\"\n    basicAuthPassword: {{ .Values.mimir.password }}\n  isDefault: false\n  readOnly: true\n- name: Tempo %s\n  type: tempo\n  access: proxy\n  url: http://tempo-gateway\n  basicAuth: true\n  basicAuthUser: {{ .Values.tempo.user }}\n  jsonData:\n    httpHeaderName1: \"X-Scope-OrgID\"\n  secureJsonData:\n    httpHeaderValue1: \"%s\"\n    basicAuthPassword: {{ .Values.tempo.password }}\n  isDefault: false\n  readOnly: true\n- name: Loki %s\n  type: loki\n  url: http://loki-gateway\n  basicAuth: true\n  basicAuthUser: {{ .Values.loki.user }}\n  jsonData:\n    httpHeaderName1: \"X-Scope-OrgID\"\n  secureJsonData:\n    httpHeaderValue1: \"%s\"\n    basicAuthPassword: {{ .Values.loki.password }}\n  isDefault: false\n  readOnly: true\n"}'
        transforms:
        - type: convert
          convert:
            toType: object
            format: json
